// Generated by view binder compiler. Do not edit!
package com.prabhakaran.nytimesapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.appbar.CollapsingToolbarLayout;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.prabhakaran.nytimesapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityArticleViewBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final AppBarLayout appBar;

  @NonNull
  public final ImageView expandedImage;

  @NonNull
  public final FloatingActionButton fabBookmark;

  @NonNull
  public final ArticleContentBinding includedLayout;

  @NonNull
  public final ImageView shareButton;

  @NonNull
  public final Toolbar toolbar;

  @NonNull
  public final CollapsingToolbarLayout toolbarLayout;

  private ActivityArticleViewBinding(@NonNull CoordinatorLayout rootView,
      @NonNull AppBarLayout appBar, @NonNull ImageView expandedImage,
      @NonNull FloatingActionButton fabBookmark, @NonNull ArticleContentBinding includedLayout,
      @NonNull ImageView shareButton, @NonNull Toolbar toolbar,
      @NonNull CollapsingToolbarLayout toolbarLayout) {
    this.rootView = rootView;
    this.appBar = appBar;
    this.expandedImage = expandedImage;
    this.fabBookmark = fabBookmark;
    this.includedLayout = includedLayout;
    this.shareButton = shareButton;
    this.toolbar = toolbar;
    this.toolbarLayout = toolbarLayout;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityArticleViewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityArticleViewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_article_view, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityArticleViewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.app_bar;
      AppBarLayout appBar = ViewBindings.findChildViewById(rootView, id);
      if (appBar == null) {
        break missingId;
      }

      id = R.id.expandedImage;
      ImageView expandedImage = ViewBindings.findChildViewById(rootView, id);
      if (expandedImage == null) {
        break missingId;
      }

      id = R.id.fab_bookmark;
      FloatingActionButton fabBookmark = ViewBindings.findChildViewById(rootView, id);
      if (fabBookmark == null) {
        break missingId;
      }

      id = R.id.includedLayout;
      View includedLayout = ViewBindings.findChildViewById(rootView, id);
      if (includedLayout == null) {
        break missingId;
      }
      ArticleContentBinding binding_includedLayout = ArticleContentBinding.bind(includedLayout);

      id = R.id.share_button;
      ImageView shareButton = ViewBindings.findChildViewById(rootView, id);
      if (shareButton == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.toolbar_layout;
      CollapsingToolbarLayout toolbarLayout = ViewBindings.findChildViewById(rootView, id);
      if (toolbarLayout == null) {
        break missingId;
      }

      return new ActivityArticleViewBinding((CoordinatorLayout) rootView, appBar, expandedImage,
          fabBookmark, binding_includedLayout, shareButton, toolbar, toolbarLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
